=========== start train the age prediction model ===========

 ==========> Using 8 processes for data loader.
(3712,) 3712
(752,) 752
 ==========> Training is getting started...
 ==========> Training takes 150 epochs.
Epoch: [0 / 150]   [step 0/232]	Loss1 1337.863 (1337.863)	Loss2 542.042 (542.042)	Loss 6758.2793 (6758.2793)	MAE 31.676 (31.676)	
Traceback (most recent call last):
  File "/home/canhdx/workspace/TSAN-brain-age-estimation/TSAN/train_second_stage.py", line 418, in <module>
    main(res)
  File "/home/canhdx/workspace/TSAN-brain-age-estimation/TSAN/train_second_stage.py", line 106, in main
    train_loss, train_mae = train(
  File "/home/canhdx/workspace/TSAN-brain-age-estimation/TSAN/train_second_stage.py", line 275, in train
    loss.backward()
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/site-packages/torch/_tensor.py", line 521, in backward
    torch.autograd.backward(
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/site-packages/torch/autograd/__init__.py", line 289, in backward
    _engine_run_backward(
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/site-packages/torch/autograd/graph.py", line 769, in _engine_run_backward
    return Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
Error in atexit._run_exitfuncs:
Traceback (most recent call last):
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/site-packages/wandb/sdk/lib/service_connection.py", line 94, in teardown_atexit
    conn.teardown(hooks.exit_code)
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/site-packages/wandb/sdk/lib/service_connection.py", line 226, in teardown
    self._router.join()
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/site-packages/wandb/sdk/interface/router.py", line 75, in join
    self._thread.join()
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/threading.py", line 1011, in join
    self._wait_for_tstate_lock()
  File "/home/canhdx/miniconda3/envs/signspeak/lib/python3.8/threading.py", line 1027, in _wait_for_tstate_lock
    elif lock.acquire(block, timeout):
KeyboardInterrupt
